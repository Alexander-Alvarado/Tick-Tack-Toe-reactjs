{"version":3,"sources":["components/tile.jsx","components/board.jsx","components/turnbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Tile","tile","this","props","winTile","xTurn","disabled","className","value","gameOver","winner","freeSpaces","onClick","handlePlace","Component","Board","setTimeout","handleCpuTurn","row1","row2","row3","onReset","grid","filter","g","id","map","key","checkTile","TurnBar","player","App","state","cpuBlock","cpuMove","lastTie","setState","console","log","randIndex","Math","floor","random","index","indexOf","checkWin","handleReset","i","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b341d11e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Tile extends Component {\r\n  render() {\r\n    let tile;\r\n\r\n    if (this.props.tile.winTile === true) {\r\n      if (this.props.xTurn === false) {\r\n        tile = (\r\n          <button disabled className=\"btn btn-lg btn-success  mx-2\">\r\n            {this.props.tile.value}\r\n          </button>\r\n        );\r\n      } else {\r\n        tile = (\r\n          <button disabled className=\"btn btn-lg btn-danger  mx-2\">\r\n            {this.props.tile.value}\r\n          </button>\r\n        );\r\n      }\r\n    } else if (\r\n      this.props.gameOver === true &&\r\n      this.props.winner === false &&\r\n      this.props.freeSpaces === 0\r\n    ) {\r\n      tile = (\r\n        <button disabled className=\"btn btn-lg btn-warning mx-2\">\r\n          {this.props.tile.value}\r\n        </button>\r\n      );\r\n    } else if (this.props.gameOver === true) {\r\n      tile = (\r\n        <button disabled className=\"btn btn-lg btn-light mx-2\">\r\n          {this.props.tile.value}\r\n        </button>\r\n      );\r\n    } else if (this.props.tile.value === \"_\") {\r\n      tile = (\r\n        <div className=\"_\">\r\n          <button\r\n            className=\"btn btn-lg btn-light mx-2\"\r\n            onClick={() => this.props.handlePlace(this.props.tile)}\r\n          >\r\n            {this.props.tile.value}\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      tile = (\r\n        <button disabled className=\"btn btn-lg btn-light mx-2\">\r\n          {this.props.tile.value}\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return <div>{tile}</div>;\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n","import React, { Component } from \"react\";\r\nimport Tile from \"./tile\";\r\n\r\nclass Board extends Component {\r\n  render() {\r\n    if (\r\n      this.props.xTurn === false &&\r\n      this.props.gameOver !== true &&\r\n      this.props.freeSpaces > 0\r\n    ) {\r\n      setTimeout(this.props.handleCpuTurn, 500);\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"d-flex justify-content-center btn \">{this.row1()}</div>\r\n        <div className=\"d-flex justify-content-center btn \">{this.row2()}</div>\r\n        <div className=\"d-flex justify-content-center btn \">{this.row3()}</div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <button className=\"btn btn-danger\" onClick={this.props.onReset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  row1() {\r\n    const grid = [...this.props.grid];\r\n    return grid\r\n      .filter(g => g.id < 4)\r\n      .map(tile => (\r\n        <Tile\r\n          key={tile.id}\r\n          tile={tile}\r\n          gameOver={this.props.gameOver}\r\n          freeSpaces={this.props.freeSpaces}\r\n          xTurn={this.props.xTurn}\r\n          checkTile={this.props.checkTile}\r\n          handleCpuTurn={this.props.handleCpuTurn}\r\n          winner={this.props.winner}\r\n          handlePlace={this.props.handlePlace}\r\n        />\r\n      ));\r\n  }\r\n\r\n  row2() {\r\n    const grid = [...this.props.grid];\r\n    return grid\r\n      .filter(g => g.id > 3 && g.id < 7)\r\n      .map(tile => (\r\n        <Tile\r\n          key={tile.id}\r\n          tile={tile}\r\n          gameOver={this.props.gameOver}\r\n          freeSpaces={this.props.freeSpaces}\r\n          xTurn={this.props.xTurn}\r\n          checkTile={this.props.checkTile}\r\n          handleCpuTurn={this.props.handleCpuTurn}\r\n          winner={this.props.winner}\r\n          handlePlace={this.props.handlePlace}\r\n        />\r\n      ));\r\n  }\r\n\r\n  row3() {\r\n    const grid = [...this.props.grid];\r\n    return grid\r\n      .filter(g => g.id > 6)\r\n      .map(tile => (\r\n        <Tile\r\n          key={tile.id}\r\n          tile={tile}\r\n          gameOver={this.props.gameOver}\r\n          freeSpaces={this.props.freeSpaces}\r\n          xTurn={this.props.xTurn}\r\n          checkTile={this.props.checkTile}\r\n          handleCpuTurn={this.props.handleCpuTurn}\r\n          winner={this.props.winner}\r\n          handlePlace={this.props.handlePlace}\r\n        />\r\n      ));\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TurnBar extends Component {\r\n  render() {\r\n    let player;\r\n    if (this.props.gameOver === true) {\r\n      if (this.props.winner === false) {\r\n        player = \"Tie!\";\r\n      } else if (this.props.xTurn === false) {\r\n        player = \"You Win!\";\r\n      } else if (this.props.xTurn === true) {\r\n        player = \"CPU Wins!\";\r\n      }\r\n    } else if (this.props.xTurn === true) {\r\n      player = \"Your Turn\";\r\n    } else {\r\n      player = \"CPU's Turn\";\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\">{player}</a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Board from \"./components/board\";\nimport TurnBar from \"./components/turnbar\";\n\nclass App extends Component {\n  state = {\n    xTurn: true, //x is the player, o is cpu\n    freeSpaces: 9,\n    cpuBlock: false,\n    cpuMove: null,\n    gameOver: false,\n    winner: false,\n    lastTie: \"o\",\n    grid: [\n      { id: 1, value: \"_\", winTile: false },\n      { id: 2, value: \"_\", winTile: false },\n      { id: 3, value: \"_\", winTile: false },\n      { id: 4, value: \"_\", winTile: false },\n      { id: 5, value: \"_\", winTile: false },\n      { id: 6, value: \"_\", winTile: false },\n      { id: 7, value: \"_\", winTile: false },\n      { id: 8, value: \"_\", winTile: false },\n      { id: 9, value: \"_\", winTile: false }\n    ]\n  };\n\n  /*  checkTile = tile => {\n    const grid = [...this.state.grid];\n    const index = grid.indexOf(tile);\n    this.setState({ cpuBlock: false, cpuMove: null });\n\n    this.handlePlace(tile);\n  }; */\n\n  handleCpuTurn = () => {\n    if (this.state.xTurn === false) {\n      const grid = [...this.state.grid];\n\n      if (\n        this.state.cpuBlock === true &&\n        grid[this.state.cpuMove - 1].value === \"_\"\n      ) {\n        let index = this.state.cpuMove - 1;\n        grid[index].value = \"o\";\n        this.setState({ grid, cpuBlock: false, cpuMove: null });\n        console.log(\"blocked player at\", this.state.cpuMove);\n      } else if (this.state.freeSpaces !== 0) {\n        let randIndex;\n\n        do {\n          randIndex = Math.floor(Math.random() * 9);\n        } while (grid[randIndex].value !== \"_\");\n\n        grid[randIndex].value = \"o\";\n        this.setState({ grid });\n        console.log(\"random play at\", randIndex + 1);\n      }\n      this.handlePlace();\n    }\n  };\n\n  handlePlace = tile => {\n    if (this.state.xTurn === true) {\n      const grid = [...this.state.grid];\n      const index = grid.indexOf(tile);\n      grid[index].value = \"x\";\n      this.setState({ grid });\n\n      let xTurn = this.state.xTurn;\n      xTurn = false;\n      this.setState({ xTurn });\n    } else if (this.state.xTurn === false) {\n      let xTurn = this.state.xTurn;\n      xTurn = true;\n      this.setState({ xTurn });\n    }\n\n    this.setState({ freeSpaces: this.state.freeSpaces - 1 });\n\n    let freeSpaces = this.state.freeSpaces;\n\n    if (this.state.freeSpaces === 0) {\n      console.log(\"board full\");\n      this.setState({ gameOver: true });\n    }\n\n    this.checkWin();\n  };\n\n  handleReset = () => {\n    const grid = this.state.grid.map(g => {\n      g.value = \"_\";\n      g.winTile = false;\n      return g;\n    });\n    this.setState({ grid });\n\n    if (this.state.freeSpaces === 0 && this.state.winner === false) {\n      if (this.state.lastTie === \"o\") {\n        this.setState({ xTurn: true, lastTie: \"x\" });\n      } else if (this.state.lastTie === \"x\") {\n        this.setState({ xTurn: false, lastTie: \"o\" });\n      }\n    }\n\n    let gameOver = this.state.gameOver;\n    gameOver = false;\n    this.setState({ gameOver });\n\n    let freeSpaces = this.state.freeSpaces;\n    freeSpaces = 9;\n    this.setState({ freeSpaces });\n\n    this.setState({ cpuBlock: false, cpuMove: null });\n\n    this.setState({ winner: false });\n    console.log(\"new game\");\n  };\n\n  checkWin = () => {\n    const { grid } = this.state;\n\n    for (let i = 0; i < 9; i = i + 3) {\n      //horizontal(i=0,3,6): i, i+1, i+2\n      if (\n        grid[i].value !== \"_\" &&\n        grid[i + 1].value !== \"_\" &&\n        grid[i + 2].value !== \"_\" &&\n        grid[i].value === grid[i + 1].value &&\n        grid[i].value === grid[i + 2].value\n      ) {\n        const grid = [...this.state.grid];\n        grid[i].winTile = true;\n        grid[i + 1].winTile = true;\n        grid[i + 2].winTile = true;\n        this.setState({ grid });\n\n        let gameOver = this.state.gameOver;\n        gameOver = true;\n        this.setState({ gameOver });\n        this.setState({ winner: true });\n\n        console.log(\"Horizontal Winner\");\n      } else if (\n        grid[i].value !== \"_\" &&\n        grid[i + 1].value !== \"_\" &&\n        grid[i + 2].value === \"_\" &&\n        grid[i].value === grid[i + 1].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i + 2].id });\n      } else if (\n        grid[i].value !== \"_\" &&\n        grid[i + 2].value !== \"_\" &&\n        grid[i + 1].value === \"_\" &&\n        grid[i].value === grid[i + 2].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i + 1].id });\n      } else if (\n        grid[i].value !== \"_\" &&\n        grid[i + 1].value !== \"_\" &&\n        grid[i + 2].value === \"_\" &&\n        grid[i].value === grid[i + 1].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i + 2].id });\n      } else if (\n        grid[i + 1].value !== \"_\" &&\n        grid[i + 2].value !== \"_\" &&\n        grid[i].value === \"_\" &&\n        grid[i + 1].value === grid[i + 2].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i].id });\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      //vertical(i=0,1,2): i, i+3, i+6\n      if (\n        grid[i].value !== \"_\" &&\n        grid[i + 3].value !== \"_\" &&\n        grid[i + 6].value !== \"_\" &&\n        grid[i].value === grid[i + 3].value &&\n        grid[i].value === grid[i + 6].value\n      ) {\n        const grid = [...this.state.grid];\n        grid[i].winTile = true;\n        grid[i + 3].winTile = true;\n        grid[i + 6].winTile = true;\n        this.setState({ grid });\n\n        let gameOver = this.state.gameOver;\n        gameOver = true;\n        this.setState({ gameOver });\n        this.setState({ winner: true });\n\n        console.log(\"Vertical Winner\");\n      } else if (\n        grid[i].value !== \"_\" &&\n        grid[i + 3].value !== \"_\" &&\n        grid[i + 6].value === \"_\" &&\n        grid[i].value === grid[i + 3].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i + 6].id });\n      } else if (\n        grid[i].value !== \"_\" &&\n        grid[i + 6].value !== \"_\" &&\n        grid[i + 3].value === \"_\" &&\n        grid[i].value === grid[i + 6].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i + 3].id });\n      } else if (\n        grid[i + 3].value !== \"_\" &&\n        grid[i + 6].value !== \"_\" &&\n        grid[i].value === \"_\" &&\n        grid[i + 3].value === grid[i + 6].value\n      ) {\n        this.setState({ cpuBlock: true, cpuMove: grid[i].id });\n      }\n    }\n\n    if (\n      //diagnalDown(i=0): i, i+4, i+8\n      grid[0].value !== \"_\" &&\n      grid[4].value !== \"_\" &&\n      grid[8].value !== \"_\" &&\n      grid[0].value === grid[4].value &&\n      grid[4].value === grid[8].value\n    ) {\n      const grid = [...this.state.grid];\n      grid[0].winTile = true;\n      grid[4].winTile = true;\n      grid[8].winTile = true;\n      this.setState({ grid });\n      let gameOver = this.state.gameOver;\n      gameOver = true;\n      this.setState({ gameOver });\n      this.setState({ winner: true });\n\n      console.log(\"Diagnal Winner\");\n    } else if (\n      grid[0].value !== \"_\" &&\n      grid[4].value !== \"_\" &&\n      grid[8].value === \"_\" &&\n      grid[0].value === grid[4].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[8].id });\n    } else if (\n      grid[0].value !== \"_\" &&\n      grid[8].value !== \"_\" &&\n      grid[4].value === \"_\" &&\n      grid[0].value === grid[8].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[4].id });\n    } else if (\n      grid[4].value !== \"_\" &&\n      grid[8].value !== \"_\" &&\n      grid[0].value === \"_\" &&\n      grid[4].value === grid[8].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[0].id });\n    }\n\n    if (\n      //diagnalUp(i=2): i, i+2, i+4\n      grid[2].value !== \"_\" &&\n      grid[4].value !== \"_\" &&\n      grid[6].value !== \"_\" &&\n      grid[2].value === grid[4].value &&\n      grid[4].value === grid[6].value\n    ) {\n      const grid = [...this.state.grid];\n      grid[2].winTile = true;\n      grid[4].winTile = true;\n      grid[6].winTile = true;\n      this.setState({ grid });\n\n      let gameOver = this.state.gameOver;\n      gameOver = true;\n      this.setState({ gameOver });\n      this.setState({ winner: true });\n\n      console.log(\"Diagnal Winner\");\n    } else if (\n      grid[2].value !== \"_\" &&\n      grid[4].value !== \"_\" &&\n      grid[6].value === \"_\" &&\n      grid[2].value === grid[4].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[6].id });\n    } else if (\n      grid[2].value !== \"_\" &&\n      grid[6].value !== \"_\" &&\n      grid[4].value === \"_\" &&\n      grid[2].value === grid[6].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[4].id });\n    } else if (\n      grid[4].value !== \"_\" &&\n      grid[6].value !== \"_\" &&\n      grid[2].value === \"_\" &&\n      grid[4].value === grid[6].value\n    ) {\n      this.setState({ cpuBlock: true, cpuMove: grid[2].id });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <TurnBar\n          grid={this.state.grid}\n          xTurn={this.state.xTurn}\n          gameOver={this.state.gameOver}\n          freeSpaces={this.state.freeSpaces}\n          winner={this.state.winner}\n        />\n        <div>\n          <Board\n            grid={this.state.grid}\n            checkTile={this.checkTile}\n            onReset={this.handleReset}\n            gameOver={this.state.gameOver}\n            freeSpaces={this.state.freeSpaces}\n            xTurn={this.state.xTurn}\n            handleCpuTurn={this.handleCpuTurn}\n            winner={this.state.winner}\n            handlePlace={this.handlePlace}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}